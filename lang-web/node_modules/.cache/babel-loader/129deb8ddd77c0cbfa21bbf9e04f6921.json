{"ast":null,"code":"var fs = require(\"fs\");\n\nclass Lang {\n  functionality() {\n    let returnIt = \"\";\n    let setLimit = 5000;\n\n    for (let i = 0; i < setLimit; i++) {\n      // Verbs\n      var randomVerb = function (words) {\n        let readME = fs.readFileSync(\"dictionary/verbs.txt\", \"utf8\");\n        let wordArr = readME.split(\", \");\n        words = words > wordArr.length ? wordArr.length : words;\n        var randWords = [];\n\n        for (let i = 0; i < words; i++) {\n          let newRandom;\n\n          do {\n            let rand = Math.floor(Math.random() * wordArr.length);\n            newRandom = wordArr[rand];\n          } while (randWords.includes(newRandom));\n\n          randWords.push(newRandom);\n        }\n\n        return randWords.join(\", \");\n      }; // Nouns\n\n\n      var randomNoun = function (words) {\n        let readME = fs.readFileSync(\"dictionary/nouns.txt\", \"utf8\");\n        let wordArr = readME.split(\", \");\n        words = words > wordArr.length ? wordArr.length : words;\n        var randWords = [];\n\n        for (let i = 0; i < words; i++) {\n          let newRandom;\n\n          do {\n            let rand = Math.floor(Math.random() * wordArr.length);\n            newRandom = wordArr[rand];\n          } while (randWords.includes(newRandom));\n\n          randWords.push(newRandom);\n        }\n\n        return randWords.join(\", \");\n      }; // Articles\n\n\n      var randomArt = function (words) {\n        let readME = fs.readFileSync(\"dictionary/articles.txt\", \"utf8\");\n        let wordArr = readME.split(\", \");\n        words = words > wordArr.length ? wordArr.length : words;\n        var randWords = [];\n\n        for (let i = 0; i < words; i++) {\n          let newRandom;\n\n          do {\n            let rand = Math.floor(Math.random() * wordArr.length);\n            newRandom = wordArr[rand];\n          } while (randWords.includes(newRandom));\n\n          randWords.push(newRandom);\n        }\n\n        return randWords.join(\", \");\n      }; // Articles 2\n\n\n      var randomArt2 = function (words) {\n        let readME = fs.readFileSync(\"dictionary/art2.txt\", \"utf8\");\n        let wordArr = readME.split(\", \");\n        words = words > wordArr.length ? wordArr.length : words;\n        var randWords = [];\n\n        for (let i = 0; i < words; i++) {\n          let newRandom;\n\n          do {\n            let rand = Math.floor(Math.random() * wordArr.length);\n            newRandom = wordArr[rand];\n          } while (randWords.includes(newRandom));\n\n          randWords.push(newRandom);\n        }\n\n        return randWords.join(\", \");\n      }; // Adjectives\n\n\n      var randomAdj = function (words) {\n        let readME = fs.readFileSync(\"dictionary/adjectives.txt\", \"utf8\");\n        let wordArr = readME.split(\", \");\n        words = words > wordArr.length ? wordArr.length : words;\n        var randWords = [];\n\n        for (let i = 0; i < words; i++) {\n          let newRandom;\n\n          do {\n            let rand = Math.floor(Math.random() * wordArr.length);\n            newRandom = wordArr[rand];\n          } while (randWords.includes(newRandom));\n\n          randWords.push(newRandom);\n        }\n\n        return randWords.join(\", \");\n      };\n\n      function combineIt() {\n        let nounPhrase = randomArt2(1) + \" \" + randomAdj(1) + \" \" + randomNoun(1) + \" \";\n        let verbPhrase = randomVerb(1) + \" \" + randomArt(1) + \" \" + randomAdj(1) + \" \" + randomNoun(1) + \". \";\n        return nounPhrase + verbPhrase;\n      }\n\n      returnIt = returnIt + combineIt();\n    }\n\n    returnIt = returnIt + \".\";\n    console.log(returnIt);\n  }\n\n}","map":{"version":3,"sources":["/Users/filippofonseca/Developer/Personal/Projects/lang/lang-web/src/functionality/lang.js"],"names":["fs","require","Lang","functionality","returnIt","setLimit","i","randomVerb","words","readME","readFileSync","wordArr","split","length","randWords","newRandom","rand","Math","floor","random","includes","push","join","randomNoun","randomArt","randomArt2","randomAdj","combineIt","nounPhrase","verbPhrase","console","log"],"mappings":"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","sourcesContent":["var fs = require(\"fs\");\n\nclass Lang {\n\n  functionality() {\n    let returnIt = \"\";\n\n    let setLimit = 5000;\n    \n    for (let i = 0; i < setLimit; i++) {\n      // Verbs\n      var randomVerb = function (words) {\n        let readME = fs.readFileSync(\"dictionary/verbs.txt\", \"utf8\");\n        let wordArr = readME.split(\", \");\n    \n        words = words > wordArr.length ? wordArr.length : words;\n    \n        var randWords = [];\n        for (let i = 0; i < words; i++) {\n          let newRandom;\n          do {\n            let rand = Math.floor(Math.random() * wordArr.length);\n            newRandom = wordArr[rand];\n          } while (randWords.includes(newRandom));\n    \n          randWords.push(newRandom);\n        }\n        return randWords.join(\", \");\n      };\n      // Nouns\n      var randomNoun = function (words) {\n        let readME = fs.readFileSync(\"dictionary/nouns.txt\", \"utf8\");\n        let wordArr = readME.split(\", \");\n    \n        words = words > wordArr.length ? wordArr.length : words;\n    \n        var randWords = [];\n        for (let i = 0; i < words; i++) {\n          let newRandom;\n          do {\n            let rand = Math.floor(Math.random() * wordArr.length);\n            newRandom = wordArr[rand];\n          } while (randWords.includes(newRandom));\n    \n          randWords.push(newRandom);\n        }\n        return randWords.join(\", \");\n      };\n    \n      // Articles\n      var randomArt = function (words) {\n        let readME = fs.readFileSync(\"dictionary/articles.txt\", \"utf8\");\n        let wordArr = readME.split(\", \");\n    \n        words = words > wordArr.length ? wordArr.length : words;\n    \n        var randWords = [];\n        for (let i = 0; i < words; i++) {\n          let newRandom;\n          do {\n            let rand = Math.floor(Math.random() * wordArr.length);\n            newRandom = wordArr[rand];\n          } while (randWords.includes(newRandom));\n    \n          randWords.push(newRandom);\n        }\n        return randWords.join(\", \");\n      };\n    \n      // Articles 2\n      var randomArt2 = function (words) {\n        let readME = fs.readFileSync(\"dictionary/art2.txt\", \"utf8\");\n        let wordArr = readME.split(\", \");\n    \n        words = words > wordArr.length ? wordArr.length : words;\n    \n        var randWords = [];\n        for (let i = 0; i < words; i++) {\n          let newRandom;\n          do {\n            let rand = Math.floor(Math.random() * wordArr.length);\n            newRandom = wordArr[rand];\n          } while (randWords.includes(newRandom));\n    \n          randWords.push(newRandom);\n        }\n        return randWords.join(\", \");\n      };\n    \n      // Adjectives\n      var randomAdj = function (words) {\n        let readME = fs.readFileSync(\"dictionary/adjectives.txt\", \"utf8\");\n        let wordArr = readME.split(\", \");\n    \n        words = words > wordArr.length ? wordArr.length : words;\n    \n        var randWords = [];\n        for (let i = 0; i < words; i++) {\n          let newRandom;\n          do {\n            let rand = Math.floor(Math.random() * wordArr.length);\n            newRandom = wordArr[rand];\n          } while (randWords.includes(newRandom));\n    \n          randWords.push(newRandom);\n        }\n        return randWords.join(\", \");\n      };\n    \n      function combineIt() {\n        let nounPhrase =\n          randomArt2(1) + \" \" + randomAdj(1) + \" \" + randomNoun(1) + \" \";\n        let verbPhrase =\n          randomVerb(1) +\n          \" \" +\n          randomArt(1) +\n          \" \" +\n          randomAdj(1) +\n          \" \" +\n          randomNoun(1) +\n          \". \";\n    \n        return nounPhrase + verbPhrase;\n      }\n    \n      returnIt = returnIt + combineIt();\n    }\n    \n    returnIt = returnIt + \".\";\n    \n    console.log(returnIt);\n  }\n  \n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}